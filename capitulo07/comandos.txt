Configuración del entorno de laboratorio de Docker.
-------------------------------------------------------
cd trincheras-docker-lab
./restaurar-ubuntu.sh
vagrant ssh vm-lab-docker-ubuntu
docker run hello-world
docker run -d --name contenedor-nginx -p 50100:80 nginx
docker run -d --name contenedor-redis -p 50101:6379 redis

Cómo obtener ayuda en Docker.
-------------------------------------------------------
docker help container
docker container ls --help

Listado de contenedores en Docker: Comandos y opciones.
-------------------------------------------------------
docker container list
docker container ls
docker container ps
docker ps
docker ps -a
docker container ls -a
docker ps -q	
docker container list -q -a

Otras opciones para listar contenedores en Docker.
-------------------------------------------------------
docker container ls -n 2
docker container ls -l
docker container ls --no-trunc
docker container ls -s

Cómo aprovechar los filtros con la opción --filter en Docker.
-------------------------------------------------------
docker ps --filter "status=running"	
docker ps --filter "status=exited"		
docker ps --filter "name=nginx"
docker ps --filter "label=env=produccion"
docker ps --filter "network=mi-red"
docker ps --filter "id=f5bbcdf7521e"
docker ps --filter "volume=mi-volumen"
docker ps --filter "status=running" --filter "network=mi-red" --filter "label=env=produccion"

Formatear la salida de manera personalizada.
-------------------------------------------------------
docker ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"
docker ps --format "table {{.ID}}\t{{.Image}}\t{{.Ports}}"
docker ps --format "table {{.ID}}\t{{.CreatedAt}}\t{{.Command}}"
docker ps --format "{{json .}}" -l

Ayuda del comando docker run.
-------------------------------------------------------
container run --help

Explorando las opciones con un ejemplo.
-------------------------------------------------------
docker run --name ubuntu-bash -i -t ubuntu /bin/bash
hostname -I
exit
hostname -I

Desmenuzando el ejemplo del servidor web nginx.
-------------------------------------------------------
docker run -d --name mi-nginx -p 50102:80 nginx
http://127.0.0.1:50102

Explorando Contenedores: Comandos esenciales para comparar el Host y el contenedor Docker.
-------------------------------------------------------
docker start ubuntu-bash
docker attach ubuntu-bash
cd trincheras-docker-lab
vagrant ssh vm-lab-docker-ubuntu
hostname
cat /etc/hosts
uname -a
cat /etc/os-release
ps aux
exit
docker ps -a

Asignar nombres significativos a los contenedores.
-------------------------------------------------------
docker run --name ubuntu-terminal -i -t ubuntu /bin/bash
docker ps -a
docker rename ubuntu-terminal ubuntu-consola
docker ps -a -f id=b955b483542c

Ejecución y acceso a contenedores.
-------------------------------------------------------
docker start ubuntu-bash
docker ps -a –filter "name=bash"
docker attach ubuntu-bash
exit

Ayuda y opciones del comando docker start.
-------------------------------------------------------
docker start --help
docker start -a ubuntu-bash
docker start --detach-keys="ctrl-d" ubuntu-bash
docker start -i ubuntu-bash

Ayuda y opciones del comando docker attach.
-------------------------------------------------------
docker attach --help
docker start ubuntu-bash
docker attach --detach-keys="ctrl-d" ubuntu-bash
docker start mi-nginx
docker attach --no-stdin mi-nginx
docker start ubuntu-consola
docker attach --sig-proxy=false ubuntu-consola

Sesión interactiva.
-------------------------------------------------------
docker start ubuntu-bash
docker exec -it ubuntu-bash /bin/bash
uname -a
exit

Ejecución directa.
-------------------------------------------------------
docker start ubuntu-bash
docker exec -it ubuntu-bash uname -a

Otras formas de ejecutar comandos en contenedores.
-------------------------------------------------------
docker run -it ubuntu bash -c "uname -a"

Usar docker exec con opciones adicionales.
-------------------------------------------------------
docker exec --help
docker exec -d ubuntu-bash touch /tmp/archivo-prueba
docker exec --detach-keys="ctrl-x" ubuntu-bash sh
docker exec -e MI_VARIABLE=valor ubuntu-bash env
cd /home/vagrant/trincheras-docker/capitulo07/archivos
cat ./env.list
docker exec --env-file ./env.list ubuntu-bash printenv
docker exec -u nobody ubuntu-bash whoami
docker exec -w /tmp ubuntu-bash ls

Contenedores como servicios: Ejecución en segundo plano.
-------------------------------------------------------
docker run -d --name test-daemon ubuntu /bin/bash -c "while true; do echo Docker desde las trincheras; sleep 1; done"
docker ps

Ejemplos de aplicaciones en contenedores como servicios.
-------------------------------------------------------
docker run -d --name apache-servicio-50103 -p 50103:80 httpd
docker run -d --name mysql-servicio-50104 -e MYSQL_ROOT_PASSWORD=clave_root_bbdd -p 50104:3306 mysql

Consultar los registros de contenedores Docker.
-------------------------------------------------------
docker container logs --help
docker logs test-daemon
docker logs -f test-daemon
docker logs --tail 10 test-daemon
docker logs -t test-daemon
docker logs --since 10m test-daemon
docker logs --since 2024-07-11T08:40:00 --until 2024-07-11T08:50:00 test-daemon
docker logs --details test-daemon

Monitoreo y gestión de procesos en contenedores.
-------------------------------------------------------
docker top test-daemon
docker top test-daemon -aux
docker top test-daemon -aux | grep echo

Copiar archivos entre el Host y los contenedores.
-------------------------------------------------------
docker container cp --help
echo “Pruebas con docker container cp” > miarchivo.txt
docker cp miarchivo.txt ubuntu-bash:/root/
docker exec ubuntu-bash ls /root/
mkdir micarpeta
echo "Contenido de prueba en archivo dentro de carpeta" > micarpeta/prueba.txt
docker cp micarpeta ubuntu-bash:/root/
docker exec ubuntu-bash ls -l /root/
docker exec ubuntu-bash bash -c "echo 'Log de prueba' > /root/log.txt"
docker cp ubuntu-bash:/root/log.txt .
ls -l
docker exec ubuntu-bash bash -c "mkdir /root/micarpeta2"
docker exec ubuntu-bash bash -c "echo 'Otro contenido de prueba' > /root/micarpeta2/otro_prueba.txt"
docker cp ubuntu-bash:/root/micarpeta2 .
ls -l
mkdir micarpeta_con_metadatos
echo "Contenido importante" > micarpeta_con_metadatos/archivo_metadatos.txt
ls -l micarpeta_con_metadatos/
touch -m -d "2022-01-01 12:00:00" micarpeta_con_metadatos/archivo_metadatos.txt
ls -l micarpeta_con_metadatos/
docker cp -a micarpeta_con_metadatos ubuntu-bash:/root/
docker exec ubuntu-bash ls -l /root/micarpeta_con_metadatos/

Configuración de variables de entorno en Docker.
-------------------------------------------------------
docker run -d --name mysql-01 -e MYSQL_ROOT_PASSWORD=mi_clave_root -p 50105:3306 mysql:latest
variables.dev
MYSQL_ROOT_PASSWORD=mi_clave_root
MYSQL_DATABASE=mi_base_de_datos
MYSQL_USER=usuario
MYSQL_PASSWORD=mi_clave_usuario
cd /home/vagrant/trincheras-docker/capitulo07/archivos
docker run -d --name mysql-02 --env-file variables.dev -p 50106:3306 -d mysql:latest

Detener contenedores de manera ordenada.
-------------------------------------------------------
docker stop test-daemon
docker start test-daemon
docker stop -t 30 test-daemon
docker start test-daemon
docker kill test-daemon

Consultar información de los contenedores.
-------------------------------------------------------
docker inspect test-daemon
docker inspect --format='{{.State.Running}}' test-daemon
docker inspect --format='Ejecutando: {{.State.Running}}' test-daemon
docker inspect --format='Ejecutando: {{.State.Running}} - Nombre: {{.Name}}' test-daemon
docker start apache-servicio-50103
docker inspect --format='{{ .NetworkSettings.IPAddress }}' apache-servicio-5010

Pausar y reanudar contenedores en Docker.
-------------------------------------------------------
docker run --name contenedor_pausa -d nginx:alpine
docker ps -f name=contenedor_pausa -q
docker pause contenedor_pausa
docker ps -f name=contenedor_pausa
docker pause $(docker ps -q)
docker exec -it contenedor_pausa /bin/bash
docker unpause contenedor_pausa
docker exec -it contenedor_pausa nginx -v
docker unpause $(docker ps -q -f status=paused)

Eliminación eficiente de contenedores Docker.
-------------------------------------------------------
docker start test-daemon
docker rm test-daemon
docker rm -f test-daemon
docker rm -f $(docker ps -a -q --filter "name=contenedor")
cd /home/vagrant/trincheras-docker/capitulo07/scripts
cat obtener_etiquetas.sh
chmod +x obtener_etiquetas.sh
./obtener_etiquetas.sh
docker rm -f $(docker ps -a --filter "label=maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>" --format "{{.ID}}")
docker rm -f $(docker ps -a -q)